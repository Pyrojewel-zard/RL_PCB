Luke Vassallo @ 2022/02/22
Changes going from version 0.1.3 to 0.1.4

Renamed enum ABSTRACTION element PAD to PADD due to a conflict with KicadParser

Added some statistics about the graph (as member functions) mainly:
    • Number of nodes (components) placed
    • Number of nodes (components) left to be palced
    • Graph placement completion, that is, a ratio between 0 and 1 showing placement progress
    • Print function to present the about three values to the user via the standard output

Added graph member functions for pruning away unplace components and their corresponding edges
    • Method to find an unplaced node
    • Method to remove a node using the node id as an arugment
    • Method for finding the net_id associated with a node (unsued)
    • Method for removing all edges in vector E associated with net_id (unused)
    • Method for removing all edges associated with a node whose id is passed as an arugment.
    • Method for removing all unplaced nodes along with their edges.

Luke Vassallo @ 2022/03/30
Changes going from version 0.1.7 to 0.1.8

Added new method to compute the full hpwl of the graph. 
Modified another method to enable the prior.

Luke Vassallo @ 2022/04/04
Changes going from version 0.1.8 to 0.1.9
Added method to return number of unique nodes combined through a net.

Luke Vassallo @ 2022/04/18
Changes going from version 0.1.9 to 0.1.10

Added new member functions to graph class:
    double calc_hpwl( std::vector<std::string>& nets_to_ignore ); - now an overloaded method. Return the hpwl for all nets expect those defined in nets_to_ignore.
    int get_net_id_from_name(std::string& net_name);
    int reorder(void) - reorders node ids and their associated edges. Should be called after removing nodes. 
    int components_in_net(std::string net_name ); - returns number of components in a net.
    
Luke Vassallo @ 2022/04/18
Changes going from version 0.1.11 to 0.1.12
    Added new class called optimal to hold optimal values for euclidean distance and hpwl. Node id and name are also available in order to be able to link and optimal object to a node object.
    
Luke Vassallo @ 2022/07/29
Changes going from version 0.1.12 to 0.1.13    
    added optimals features
    
Luke Vassallo @ 2022/08/04
	Changes going from version 0.1.13 to 0.1.14
	Added new method,  , for returnin build information as a string. The original method, which is still retained, prints the information to console.    
	
Luke Vassallo @ 2022/08/19
	Changes going from version 0.1.14 to 0.1.15
    Updated methods: calc_hpwl and update_hpwl by augmenting their function prototype with an optional argument for including unlocked nodes in calculating the hpwl.
 
Luke Vassallo @ 2022/08/19
	Changes going from version 0.1.15 to 0.1.16 
    Added new method to return kicad_pcb_file; std::string get_kicad_pcb_file(void)
    
